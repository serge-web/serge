.mapping {
    width: 100%;
    height: 100%;
}
.hex2-label {
  position: absolute;
  width:40px;
  font-size:20px;
}
.cell-label {
  color: #bbb;
  font-size: 14px;
  width: 50%;
  margin: 0 auto;
}
.cell-label-black {
  color: rgb(0, 0, 0);
  font-size: 14px;
  width: 50%;
  margin: 0 auto;
  opacity: 0.5;
}

.leaflet-container .leaflet-control-mouseposition {
  background-color: rgba(255, 255, 255, 0.7);
  box-shadow: 0 0 5px #bbb;
  padding: 0 5px;
  margin:0;
  color: #333;
  font: 11px/1.5 "Helvetica Neue", Arial, Helvetica, sans-serif;
}

.platform-counter {
  border-radius: 100%;
  background-repeat: no-repeat;
  background-position: center;
  background-size: 80%;
  box-shadow: 3px 3px 2px rgba(0, 0, 0, 0.25);
  border: 1px solid rgba(255, 255, 255, 0.6);
  &.selected {
    border: 4px solid rgba(255, 255, 255, .7);
  }
  &.asset-destroyed {
    border: 4px solid rgba(0, 0, 0, 0.6);
  }
}

.platform-force {
  // Note: in the longer term these shades should come form the force element
  // of the wargame definition. When that happens we will probably need to use
  // HSL conversions to make the abnormal condition shades darker.
  &-blue {
    background-color: #000fff;   
    &.platform-abnormal-condition {
     background-color: #d4d7fc;
    }
  }

  &-blue2 {
    background-color: #33adf9;   
    &.platform-abnormal-condition {
     background-color: #9ad6fc;
    }
  }

  &-red {
    background-color: #ff0000;
    &.platform-abnormal-condition {
      background-color: #ffcece;
    }
  }
  &-green {
    background-color: #19bd37;
    &.platform-abnormal-condition {
      background-color: #ADC3AC;
    }
    }
  &-unknown {
    background-color: #999; 
   }
   &.platform-abnormal-condition {
    background-color: rgb(222, 222, 222);
  }
}

 .leaflet-popup-content-wrapper {
   background-color: rgba(#fff, .95);
   box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);
   border-radius: 5px;
 }

 .leaflet-popup-content {
   margin: 0;
 }

 .leaflet-popup-tip-container {
   display: none;
 }

$platforms: frigate, destroyer, mcmv, unknown, agi, fast-attack-craft, uas, merchant-vessel, fixed-wing-aircraft, fishing-vessel, missile, helicopter, boghammer, coastal-radar-site, datum, torpedo, pirate, mine;

@each $platform in $platforms {
  .platform-type-#{$platform} {
    background-image: url('counters/#{$platform}.svg');
  }   
}

.platform-counter-planned {
  opacity: 0.5
}

div.map-turn-marker {
  width: 200px;
  padding-left: 15px;
  color: #000;
}

.marker-hidden {
  visibility: hidden;
}

/** this is the easyBar component, that contains a collection of buttons */
.easy-button-container {
  padding-right:30px;
  width:16px; // to force buttons to be displayed vertically
  box-shadow: 0 1px 5px rgba(0,0,0,0.65);
  border-radius: 4px;
}
.easy-button-container .easy-button-button {
  line-height: 1.65;
}
/** we can't easily control the classes for easyButtons, but we can control
  enabled/disabled.  Use this as a status to let us highlight the current one */
.easy-button-button.disabled {
  background-color: #ddd;
}

/* Some components use a slide-in-out animation, this is the CSS for that */

.slide-enter,
.slide-leave {
    overflow: hidden;
}

.slide-enter {
    max-height: 0;
  }
  
.slide-enter.slide-enter-active {
    transition: max-height 500ms ease-in-out;
    max-height: 1000px;
}

.slide-leave {
    max-height: 1000px;
}

.slide-leave.slide-leave-active {
    transition: max-height 200ms ease-in-out;
    max-height: 0;
}